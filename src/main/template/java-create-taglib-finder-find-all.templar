{-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		PACKAGE DECLARATION, IMPORT STATEMENTS AND CLASS DEFINITION
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --}

package {database.package}.taglib.{table.javaFieldName};{\n}{\n}
// - - - - thoughtfully generated by synapticloop h2zero - - - - {\n}
//    with the use of synapticloop templar templating language{\n}
//          (java-create-taglib-finder-find-all.templar){\n}{\n}

import javax.servlet.jsp.JspException;{\n}
import javax.servlet.jsp.PageContext;{\n}
import javax.servlet.jsp.tagext.BodyTagSupport;{\n}
{\n}
import org.apache.log4j.Logger;{\n}
{\n}
import {database.package}.model.{table.javaClassName};{\n}
{if !table.isConstant}
	import {database.package}.finder.{table.javaClassName}Finder;{\n}
{endif}
import {database.package}.model.util.Constants;{\n}
{\n}

@SuppressWarnings("serial"){\n}
public class FindAllTag extends BodyTagSupport {{{\n}
	{\t}// the binder is unused in code, but will generate compile problems if this {\n}
	{\t}// class is no longer referenced in the h2zero file. Just a nicety for{\n}
	{\t}// removing dead code{\n}
	{\t}@SuppressWarnings("unused"){\n}
	{\t}private static final String BINDER = Constants.{table.upperName}_binder;{\n}{\n}
	{\t}private static final Logger LOGGER = Logger.getLogger(FindAllTag.class);{\n}{\n}
	{\t}private String var = null;{\n}
	{\t}private boolean removeVar = false;{\n}{\n}

	{\t}public int doStartTag() throws JspException {{{\n}
		{if !table.isConstant}
			{\t}{\t}pageContext.setAttribute(var, {table.javaClassName}Finder.findAllSilent());{\n}
		{else}
			{\t}{\t}pageContext.setAttribute(var, {table.javaClassName}.ALL);{\n}
		{endif}
		{\t}{\t}return(EVAL_BODY_INCLUDE);{\n}
	}{\n}

{\n}
	{\t}public int doEndTag() throws JspException {{{\n}
	{\t}{\t}pageContext.removeAttribute(var, PageContext.PAGE_SCOPE);{\n}
	{\t}{\t}return(EVAL_PAGE);{\n}
	{\t}}{\n}

{\n}
	{\t}public String getVar() {{{\n}
	{\t}{\t}return var;{\n}
	{\t}}{\n}

{\n}
	{\t}public void setVar(String var) {{{\n}
	{\t}{\t}this.var = var;{\n}
	{\t}}{\n}

{\n}
	{\t}public void setRemoveVar(boolean removeVar) {{{\n}
	{\t}{\t}this.removeVar = removeVar;{\n}
	{\t}}{\n}

{\n}
	{\t}public boolean getRemoveVar() {{{\n}
	{\t}{\t}return removeVar;{\n}
	{\t}}{\n}

}
