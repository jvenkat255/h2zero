plugins {
	id 'java'
	id 'eclipse'
	id "maven"
	id "maven-publish"

	id "com.github.ben-manes.versions" version "0.13.0"
	id "com.github.johnrengelman.shadow" version "1.2.4"
	id "com.jfrog.bintray" version "1.7.3"

	id 'com.gradle.plugin-publish' version '0.9.7'
	id 'co.riiid.gradle' version '0.4.2'
	id 'net.saliman.cobertura' version '2.2.6'

	id 'synapticloop.copyrightr' version '1.0.1'
	id 'synapticloop.documentr' version '2.6.1'
}

group = 'synapticloop'
archivesBaseName = 'h2zero'
description = """lightweight ORM generator for mysql, java and optionally jsp/servlets"""
version = '1.3.1'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	runtime 'synapticloop:templar:1.3.0'
	runtime 'org.json:json:20160810'
	runtime 'com.mchange:c3p0:0.9.5.2'
	runtime 'commons-validator:commons-validator:1.5.1'
	runtime 'org.apache.logging.log4j:log4j-core:2.4.1'
	runtime 'io.dropwizard.metrics:metrics-core:3.1.2'
	runtime 'javax.mail:javax.mail-api:1.5.6'

	compile gradleApi()
	compile 'synapticloop:templar:1.3.0'
	compile 'org.json:json:20160810'
	compile 'org.apache.ant:ant:1.9.7'
	compile 'javax.servlet.jsp:jsp-api:2.2'
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'com.mchange:c3p0:0.9.5.2'
	compile 'commons-validator:commons-validator:1.5.1'
	compile 'org.apache.logging.log4j:log4j-core:2.7'
	compile 'io.dropwizard.metrics:metrics-core:3.1.2'
	compile 'javax.mail:javax.mail-api:1.5.6'
	compile 'com.github.stefanbirkner:system-rules:1.16.1'

	testRuntime 'junit:junit:4.12'
	testRuntime 'org.mockito:mockito-all:1.10.19'
	testRuntime 'com.github.stefanbirkner:system-rules:1.16.1'

	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-all:1.10.19'
	testCompile 'com.github.stefanbirkner:system-rules:1.16.1'
}

jar {
	manifest {
		attributes("Main-Class": "synapticloop.h2zero.Main",
				"Implementation-Version": version)
	}
}

cobertura {
	coverageFormats = [ 'html', 'xml']
}

test {
	include '**/*Test.class'
	maxParallelForks = 1
}

shadowJar {
	dependencies {
		include(dependency('synapticloop:templar:.*'))
		include(dependency('org.json:json:.*'))
		classifier = ""
	}
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

build.finalizedBy(project.tasks.shadowJar)
test.finalizedBy(project.tasks.cobertura)


publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId 'synapticloop'

			artifactId 'h2zero'

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = 'h2zero'
	}

}

github {
	owner = group
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '.jar'
	]
}

pluginBundle {

	website = 'https://github.com/synapticloop/h2zero'
	vcsUrl = 'https://github.com/synapticloop/h2zero'
	description = 'lightweight ORM generator for mysql, java and optionally jsp/servlets - this utilises the templar templating language'
	tags = [ 'h2zero', 'ORM', 'generator' ]

	plugins {
		h2zeroPlugin {
			id = 'synapticloop.h2zero'
			displayName = 'Synapticloop Gradle h2zero plugin'
		}
	}
}

task(dist).dependsOn( [ 'cobertura', 'jar', 'javadoc' ] )
